{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "env": {
            "defaultValue": "",
            "type": "String"
        },
        "location": {
            "defaultValue": "",
            "type": "String"
        },
        "platform_papi_name": {
            "defaultValue": "platform-professional-api",
            "type": "String"
        },
        "publisher_email": {
            "defaultValue": "papi-mangement@hmcts.net",
            "type": "String"
        },
        "publisher_name": {
            "defaultValue": "HMCTS Reform Platform Engineering",
            "type": "String"
        },
        "notification_sender_email": {
            "defaultValue": "professional-api-noreply@mail.windowsazure.com",
            "type": "String"
        },
        "policies_policy_name": {
            "defaultValue": "policy",
            "type": "String"
        },
        "oauth_token_endpoint": {
            "type": "string"
        },
        "oauth_authorization_endpoint_redirect_uri": {
            "type": "string"
        },
        "oauth_authorization_endpoint": {
            "type": "string"
        },
        "oauth_client_id": {
            "type": "string"
        },
        "oauth_client_secret": {
            "type": "string"
        },
        "platform_papi_infra": {
            "defaultValue": "",
            "type": "String"
        },
        "platform_papi_vnet": {
            "defaultValue": "",
            "type": "String"
        },
        "platform_papi_snet": {
            "defaultValue": "",
            "type": "String"
        },
        "subscription_id": {
            "defaultValue": "",
            "type": "String"
        },
        "platform_papi_sku": {
            "defaultValue": "Developer",
            "type": "String"
        },
        "products_public": {
            "defaultValue": "public",
            "type": "String"
        },
        "products_private": {
            "defaultValue": "private",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.ApiManagement/service",
            "sku": {
                "name": "[parameters('platform_papi_sku')]",
                "capacity": 1
            },
            "name": "[parameters('platform_papi_name')]",
            "apiVersion": "2017-03-01",
            "location": "[parameters('location')]",
            "tags": {},
            "scale": null,
            "properties": {
                "publisherEmail": "[parameters('publisher_email')]",
                "publisherName": "[parameters('publisher_name')]",
                "notificationSenderEmail": "[parameters('notification_sender_email')]",
                "hostnameConfigurations": [],
                "additionalLocations": null,
                "virtualNetworkConfiguration": {
                    "subnetResourceId": "[concat('/subscriptions/',parameters('subscription_id'),'/resourceGroups/',parameters('platform_papi_infra'),'/providers/Microsoft.Network/virtualNetworks/',parameters('platform_papi_vnet'),'/subnets/',parameters('platform_papi_snet'))]"
                },
                "customProperties": {
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Ssl30": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11": "False",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Ssl30": "False"
                },
                 "virtualNetworkType": "External"
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.ApiManagement/service/products",
            "name": "[concat(parameters('platform_papi_name'), '/', parameters('products_public'))]",
            "apiVersion": "2017-03-01",
            "scale": null,
            "properties": {
                "displayName": "Public API",
                "description": "Subscribers will have access to public API.",
                "terms": "",
                "subscriptionRequired": true,
                "approvalRequired": false,
                "subscriptionsLimit": 1,
                "state": "published"
            },
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('platform_papi_name'))]"
            ],
            "resources": [
                {
                    "type": "Microsoft.ApiManagement/service/products/groups",
                    "name": "[concat(parameters('platform_papi_name'), '/', parameters('products_public'), '/developers')]",
                    "apiVersion": "2017-03-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.ApiManagement/service/products', parameters('platform_papi_name'), parameters('products_public'))]"
                     ]
                },
                {
                    "type": "Microsoft.ApiManagement/service/products/groups",
                    "name": "[concat(parameters('platform_papi_name'), '/', parameters('products_public'), '/guests')]",
                    "apiVersion": "2017-03-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.ApiManagement/service/products', parameters('platform_papi_name'), parameters('products_public'))]"
                     ]
                }
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/products",
            "name": "[concat(parameters('platform_papi_name'), '/', parameters('products_private'))]",
            "apiVersion": "2017-03-01",
            "scale": null,
            "properties": {
                "displayName": "Private API",
                "description": "Subscribers will have access to the private API.",
                "terms": "",
                "subscriptionRequired": true,
                "approvalRequired": false,
                "subscriptionsLimit": 1,
                "state": "published"
            },
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('platform_papi_name'))]"
            ],
            "resources": [
                {
                    "type": "Microsoft.ApiManagement/service/products/groups",
                    "name": "[concat(parameters('platform_papi_name'), '/', parameters('products_private'), '/developers')]",
                    "apiVersion": "2017-03-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.ApiManagement/service/products', parameters('platform_papi_name'), parameters('products_private'))]"
                     ]
                },
                {
                    "type": "Microsoft.ApiManagement/service/products/groups",
                    "name": "[concat(parameters('platform_papi_name'), '/', parameters('products_private'), '/guests')]",
                    "apiVersion": "2017-03-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.ApiManagement/service/products', parameters('platform_papi_name'), parameters('products_private'))]"
                     ]
                }
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/policies",
            "name": "[concat(parameters('platform_papi_name'), '/', parameters('policies_policy_name'))]",
            "apiVersion": "2017-03-01",
            "scale": null,
            "properties": {
                "policyContent": "[concat('<!--\r\n    IMPORTANT:\r\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\r\n    - Only the <forward-request> ', parameters('policies_policy_name'),' element can appear within the <backend> section element.\r\n    - To apply a ', parameters('policies_policy_name'),' to the incoming request (before it is forwarded to the backend service), place a corresponding ', parameters('policies_policy_name'),' element within the <inbound> section element.\r\n    - To apply a ', parameters('policies_policy_name'),' to the outgoing response (before it is sent back to the caller), place a corresponding ', parameters('policies_policy_name'),' element within the <outbound> section element.\r\n    - To add a ', parameters('policies_policy_name'),' position the cursor at the desired insertion point and click on the round button associated with the ', parameters('policies_policy_name'),'.\r\n    - To remove a ', parameters('policies_policy_name'),', delete the corresponding ', parameters('policies_policy_name'),' statement from the ', parameters('policies_policy_name'),' document.\r\n    - Policies are applied in the order of their appearance, from the top down.\r\n-->\r\n<policies>\r\n  <inbound />\r\n  <backend>\r\n    <forward-request />\r\n  </backend>\r\n  <outbound />\r\n</policies>')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('platform_papi_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/authorizationServers",
            "name": "[concat(parameters('platform_papi_name'), '/sidam')]",
            "apiVersion": "2018-01-01",
            "scale": null,
            "properties": {
                "displayName": "sidam",
                "description": null,
                "clientRegistrationEndpoint": "",
                "authorizationEndpoint": "[concat(parameters('oauth_authorization_endpoint'),'?response_type=code&client_id=',parameters('oauth_client_id'),'&redirect_uri=',parameters('oauth_authorization_endpoint_redirect_uri'))]",
                "authorizationMethods": [
                "GET",
                "POST"],
                "clientAuthenticationMethod": [
                       "Basic",
                       "Body"
                ],
            "tokenBodyParameters": [
                {
                "name": "client_id",
                "value": "parameters('oauth_client_id')"
                },
                {
                "name": "client_secret",
                "value": "parameters('oauth_client_secret')"
                }
            ],
            "tokenEndpoint": "parameters('oauth_token_endpoint')",
            "supportState": false,
            "defaultScope": null,
            "grantTypes": [
              "authorizationCode"
            ],
            "bearerTokenSendingMethods": [
              "authorizationHeader",
              "query"
            ],
            "clientId": "parameters('oauth_client_id')",
            "clientSecret": "parameters('oauth_client_secret')",
            "resourceOwnerUsername": null,
            "resourceOwnerPassword": null
          },
          "dependsOn": [
            "[resourceId('Microsoft.ApiManagement/service', parameters('platform_papi_name'))]"
          ]
        }
    ]
}